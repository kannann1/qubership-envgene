name: Dev build effective-set-generator dockerimage

run-name: "Build effective-set-generator: commit ${{ github.sha }} by ${{ github.actor }}"

on:
  workflow_dispatch:
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: netcracker/qubership-effective-set-generator

jobs:
  jar-build:
    uses: netcracker/qubership-workflow-hub/.github/workflows/maven-publish.yml@main
    with:
      maven-command: "--batch-mode package -Dgpg.skip=true -f build_effective_set_generator_java/pom.xml"
      java-version: 17
      upload-artifact: true
      artifact-id: effective_set_jar
    secrets:
      maven-token: ${{ secrets.GITHUB_TOKEN }} 

  build-and-push-image:
    needs: jar-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Effective set JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: effective_set_jar
          path: ./build_effective_set_generator_java/target/

      - name: List downloaded files
        run: |
          echo "=== Files in workspace ==="
          ls -R
          
          echo "=== Files in target/ ==="
          ls -la ./build_effective_set_generator_java/target/    

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build_effective_set_generator_java/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_USER=${{ secrets.GIT_USER }}
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}
